package com.coworking_service.model.enums;

/**
 * Перечисление, представляющее типы сообщений, используемых в консольном приложении.
 */
public enum MessageType {
    /**
     * Сообщение приветствия при запуске приложения.
     */
    WELCOME("Добро пожаловать в управление коворкинг-пространством!"),

    /**
     * Сообщение с инструкцией для пользователя о входе или регистрации.
     */
    INSTRUCTIONS("Введите L для входа или R для регистрации."),

    /**
     * Сообщение с запросом логина пользователя.
     */
    PROMPT_LOGIN("Введите логин:"),

    /**
     * Сообщение об ошибке, когда пользователь с введенным логином не найден.
     */
    LOGIN_NOT_FOUND_ERROR("Пользователь не найден, введите корректный логин:"),

    /**
     * Сообщение о повторном запросе логина, если пользователь с таким логином уже существует.
     */
    LOGIN_ALREADY_EXISTS_ERROR("Пользователь с таким именем уже существует."),

    /**
     * Сообщение с запросом пароля пользователя.
     */
    PROMPT_PASSWORD("Введите пароль:"),

    /**
     * Сообщение об ошибке при вводе неправильного пароля.
     */
    INCORRECT_PASSWORD_ERROR("Неверный пароль, попробуйте снова:"),

    /**
     * Сообщение приветствия после успешного входа.
     */
    WELCOME_USER("Добро пожаловать,"),

    /**
     * Сообщение об успешной регистрации пользователя.
     */
    REGISTRATION_SUCCESS("Вы успешно зарегистрировались."),

    /**
     * Сообщение с предложением вернуться на стартовую страницу.
     */
    RETURN_TO_START_PAGE("Для возвращения на стартовую страницу введите S."),

    /**
     * Сообщение о неправильной команде, введенной пользователем.
     */
    INVALID_COMMAND_ERROR("Неверная команда, повторите ввод."),
    ACTIONS_FOR_ADMINISTRATOR("Введите: \n" +
            "I -> создание нового индивидуального рабочего места\n" +
            "С -> создание нового конференц-зала\n" +
            "B -> работа с бронью\n" +
            "\n" +
            "E -> выход"),
    ACTIONS_FOR_USER("Введите:\n" +
            "B -> работа с бронью\n" +
            "M -> список моих броней\n" +
            "L -> лист всех пространств\n" +
            "D -> посмотреть свободные пространства по дате" +
            "\n" +
            "E -> выход"),
    CREATING_INDIVIDUAL_WORKPLACE("Вы хотите создать новое индивидуальное рабочее место? y/n"),
    CREATING_WORKPLACE_SUCCESS("Новое рабочее место успешно создано."),
    CANCEL_CREATING_WORKPLACE("Создание нового рабочего места отменено."),
    CREATING_CONFERENCE_ROOM("Вы хотите создать новый конференц-зал? y/n"),
    NUMBER_OF_PLACE("Какое максимальное количество человек вмещает этот зал?"),
    DATE("Введите дату в формате ГГГГ-ММ-ДД")
    ;

    private final String message;

    /**
     * Конструктор для инициализации типа сообщения.
     *
     * @param message текст сообщения
     */
    MessageType(String message) {
        this.message = message;
    }

    /**
     * Получает текст сообщения.
     *
     * @return текст сообщения
     */
    public String getMessage() {
        return message;
    }
}
