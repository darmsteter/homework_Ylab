package com.coworking_service.entity.enums;

/**
 * Перечисление, представляющее типы сообщений, используемых в консольном приложении.
 */
public enum MessageType {
    /**
     * Сообщение приветствия при запуске приложения.
     */
    WELCOME("Добро пожаловать в управление коворкинг-пространством!"),

    /**
     * Сообщение с инструкцией для пользователя о входе или регистрации.
     */
    INSTRUCTIONS("Введите L для входа или R для регистрации."),

    /**
     * Сообщение с запросом логина пользователя.
     */
    PROMPT_LOGIN("Введите логин:"),

    /**
     * Сообщение об ошибке, когда пользователь с введенным логином не найден.
     */
    LOGIN_NOT_FOUND_ERROR("Пользователь не найден, введите корректный логин:"),

    /**
     * Сообщение о повторном запросе логина, если пользователь с таким логином уже существует.
     */
    LOGIN_ALREADY_EXISTS_ERROR("Пользователь с таким именем уже существует."),

    /**
     * Сообщение с запросом пароля пользователя.
     */
    PROMPT_PASSWORD("Введите пароль:"),

    /**
     * Сообщение об ошибке при вводе неправильного пароля.
     */
    INCORRECT_PASSWORD_ERROR("Неверный пароль, попробуйте снова:"),

    /**
     * Сообщение приветствия после успешного входа.
     */
    WELCOME_USER("Добро пожаловать,"),

    /**
     * Сообщение об успешной регистрации пользователя.
     */
    REGISTRATION_SUCCESS("Вы успешно зарегистрировались."),

    /**
     * Сообщение с предложением вернуться на стартовую страницу.
     */
    RETURN_TO_START_PAGE("Для возвращения на стартовую страницу введите S."),

    /**
     * Сообщение о неправильной команде, введенной пользователем.
     */
    INVALID_COMMAND_ERROR("Неверная команда, повторите ввод."),

    /**
     * Сообщение с доступными действиями для администратора.
     */
    ACTIONS_FOR_ADMINISTRATOR("""
            Введите:\s
            I -> создание нового индивидуального рабочего места
            С -> создание нового конференц-зала
                       \s
            B -> забронировать пространство
            M -> список броней по имени пользователя
            L -> список всех пространств
            D -> посмотреть свободные пространства по дате
            R -> удалить бронь
                       \s
            E -> выход"""),

    /**
     * Сообщение с доступными действиями для пользователя.
     */
    ACTIONS_FOR_USER("""
            Введите:\s
            B -> забронировать пространство
            M -> список моих броней
            L -> список всех пространств
            D -> посмотреть свободные пространства по дате
            R -> удалить бронь
                       \s
            E -> выход"""),

    /**
     * Сообщение с запросом создания нового индивидуального рабочего места.
     */
    PROMPT_CREATING_INDIVIDUAL_WORKPLACE("Вы хотите создать новое индивидуальное рабочее место? y/n"),

    /**
     * Сообщение об успешном создании рабочего места.
     */
    CREATING_WORKPLACE_SUCCESS("Новое рабочее место успешно создано."),

    /**
     * Сообщение об отмене создания нового рабочего места.
     */
    CANCEL_CREATING_WORKPLACE("Создание нового рабочего места отменено."),

    /**
     * Сообщение с запросом создания нового конференц-зала.
     */
    PROMPT_CREATING_CONFERENCE_ROOM("Вы хотите создать новый конференц-зал? y/n"),

    /**
     * Сообщение с запросом максимального количества человек в конференц-зале.
     */
    PROMPT_NUMBER_OF_PLACE("Какое максимальное количество человек вмещает этот зал?"),

    /**
     * Сообщение с запросом ввода даты в формате ГГГГ-ММ-ДД.
     */
    PROMPT_DATE("Введите дату в формате ГГГГ-ММ-ДД."),

    /**
     * Сообщение с запросом даты бронирования.
     */
    PROMPT_BOOKING_DATE("Введите дату бронирования."),

    /**
     * Сообщение об ошибке ввода некорректного формата даты.
     */
    INCORRECT_DATE_ERROR("Некорректный формат даты."),

    /**
     * Сообщение с запросом номера рабочего пространства.
     */
    PROMPT_WORKPLACE_NUMBER("Введите номер нужного вам рабочего пространства:"),

    /**
     * Инструкция по вводу слотов для бронирования.
     */
    INSTRUCTION_FOR_SLOTS_PROMPT("""
            Введите номер слота, который вы хотите забронировать и количество слотов.
            Например, для брони с 9:00 до 13:00 необходимо ввести
            2
            4\
                   \s
            2 - номер первого бронируемого слота, 4 - количество бронируемых слотов."""),

    /**
     * Сообщение об успешном создании брони.
     */
    BOOKING_SUCCESS("Бронь успешно создана."),

    /**
     * Сообщение об ошибке при создании брони.
     */
    BOOKING_CREATION_ERROR("Ошибка при создании брони: "),

    /**
     * Сообщение с запросом логина пользователя для удаления брони.
     */
    PROMPT_LOGIN_BOOKING_DELETE("Введите логин пользователя, чью бронь вы хотите удалить:"),

    /**
     * Сообщение с запросом логина пользователя для поиска брони.
     */
    PROMPT_LOGIN_BOOKING_SEARCH("Введите логин пользователя, чьи брони вы хотите посмотреть:"),

    /**
     * Сообщение об отсутствии бронирований на указанную дату.
     */
    BOOKING_SEARCH_ERROR("Нет бронирований на указанную дату."),

    /**
     * Сообщение со списком бронирований пользователя.
     */
    LIST_OF_BOOKING("Список бронирований пользователя:"),

    /**
     * Сообщение с запросом номера бронирования для удаления.
     */
    PROMPT_DELETING_BOOKING("Введите номер бронирования для удаления:"),

    /**
     * Сообщение об ошибке при удалении бронирования.
     */
    BOOKING_DELETE_ERROR("Ошибка при удалении бронирования: "),

    /**
     * Сообщение об отсутствии бронирований у пользователя.
     */
    BOOKING_DOESNT_EXIST_ERROR("У данного пользователя нет бронирований."),
    /**
     * Ошибка, возникающая при сохранении данных в базу данных.
     */
    INTERNAL_ERROR("Ошибка при получении данных из базы данных.");

    private final String message;

    /**
     * Конструктор для инициализации типа сообщения.
     *
     * @param message текст сообщения
     */
    MessageType(String message) {
        this.message = message;
    }

    /**
     * Получает текст сообщения.
     *
     * @return текст сообщения
     */
    public String getMessage() {
        return message;
    }
}